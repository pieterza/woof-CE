diff --git a/fs/aufs/hfsnotify.c b/fs/aufs/hfsnotify.c
index b029fa20..6b35e886 100644
--- a/fs/aufs/hfsnotify.c
+++ b/fs/aufs/hfsnotify.c
@@ -238,7 +238,8 @@ static int au_hfsn_init_br(struct au_branch *br, int perm)
 		goto out;
 
 	err = 0;
-	group = fsnotify_alloc_group(&au_hfsn_ops);
+	group = fsnotify_alloc_group(&au_hfsn_ops,
+				     /*flags - not for userspace*/0);
 	if (IS_ERR(group)) {
 		err = PTR_ERR(group);
 		pr_err("fsnotify_alloc_group() failed, %d\n", err);
diff --git a/fs/aufs/vfsub.c b/fs/aufs/vfsub.c
index a85774c9..b2ef1db9 100644
--- a/fs/aufs/vfsub.c
+++ b/fs/aufs/vfsub.c
@@ -400,6 +400,7 @@ int vfsub_rename(struct inode *src_dir, struct dentry *src_dentry,
 		 struct inode **delegated_inode, unsigned int flags)
 {
 	int err;
+	struct renamedata rd;
 	struct path tmp = {
 		.mnt	= path->mnt
 	};
@@ -416,9 +417,14 @@ int vfsub_rename(struct inode *src_dir, struct dentry *src_dentry,
 	if (unlikely(err))
 		goto out;
 
+	rd.old_dir = src_dir;
+	rd.old_dentry = src_dentry;
+	rd.new_dir = dir;
+	rd.new_dentry = path->dentry;
+	rd.delegated_inode = delegated_inode;
+	rd.flags = flags;
 	lockdep_off();
-	err = vfs_rename(src_dir, src_dentry, dir, path->dentry,
-			 delegated_inode, flags);
+	err = vfs_rename(&rd);
 	lockdep_on();
 	if (!err) {
 		int did;
